"""
    1, 2, 3 더하기 (5)
    점화식을 세우는 것이 중요!
    우선 노트에 1,2,3,4,5,6을 만드는 경우의 수를 모두 적어보았다.
    1: 1 - 1가지
    2: 1+1 (X) 2 -> 1가지
    3: 1+1+1 (X) 1+2 2+1 3 -> 3가지
    4: 1+3 3+1 1+2+1 -> 3가지
    5: 2+1+2 2+3 3+2 1+3+1 -> 4가지
    6: 3+2+1 3+1+2 2+1+2+1 1+2+1+2 1+2+3 1+3+2 2+1+3 2+3+1 -> 8가지

    자세히 보면, 5에서 6을 만드는 경우엔 2,3으로 끝나는 수식에 +1이 오는 횟수와 1,2로 끝나는 수식에 3이 오는 횟수,
    1,3으로 끝나는 수식에 2가 오는 횟수를 찾으면 된다.

    즉 점화식은
    dp[i][0] (6에 대해 1으로 끝나는 수식) = dp[i-1][1] + dp[i-1][2]
    dp[i][1] (6에 대해 2로 끝나는 수식) = dp[i-1][0] + dp[i-1][2]
    dp[i][2] (6에 대해 3으로 끝나는 수식) = dp[i-1][0] + dp[i-1][1]
    위와 같이 될 수 있다.

"""

import sys

input = sys.stdin.readline

dp = [[0 for _ in range(3)] for _ in range(100001)]
num = 1000000009

# N이 1일때 2일때 3일때 각각 1,2,3으로 끝나는 상황의 개수 미리 초기화
dp[1] = [1, 0, 0]
dp[2] = [0, 1, 0]
dp[3] = [1, 1, 1]

for i in range(4, 100001):
    dp[i][0] = (dp[i - 1][1] + dp[i - 1][2]) % num
    dp[i][1] = (dp[i - 2][0] + dp[i - 2][2]) % num
    dp[i][2] = (dp[i - 3][0] + dp[i - 3][1]) % num

T = int(input())
for i in range(T):
    n = int(input())
    print(sum(dp[n]) % num)