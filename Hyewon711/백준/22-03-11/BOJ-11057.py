# 백준 11057 오르막 수 구하기 ( 1 ≤ N ≤ 1,000 )

# 수의 자리가 오름차순이어야하며 이전 수와 같아도 오름차로 친다.
# n을 수의 자릿수라고 정의할 때, n=1 일 경우 한자리 수 / n=2 일 경우 두자리 수가 된다.

n = int(input()) 

dp = [[0] * 10 for _ in range(n+1)] # 배열을 정의

for i in range(10): #0부터 9까지 반복
    dp[1][i] = 1 #한자리 수의 경우, 각 배열마다 경우의 수는 1가지이다.

for i in range(2, n+1): # i는 자릿수 / 한자리 수의 경우엔 정의되었으므로 두자리부터 반복
    for j in range(10): #  j는 맨끝 자릿수에 들어가는 수이다.
        for k in range(j+1): # 총 경우의 수는 0부터 j까지의 합이 된다.
            dp[i][j] += dp[i-1][k]
            
print(sum(dp[n])%10007) 