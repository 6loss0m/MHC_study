# 백준 - 9465 스티커 / 스티커는 2행 n열로 배치되어 있다. (스티커 2n개)

T = int(input()) # 테스트 케이스 개수 입력
for _ in range(T) : # 입력된 테스트 케이스 개수만큼 반복
    n = int(input()) # 테스트 케이스의 첫째 줄에는 n, 다음 두줄은 n개의 정수가 주어진다. 각 정수는 그 위치에 해당하는 스티커 점수이다. 
    dp = []
    for _ in range(2):
        dp.append(list(map(int, input().split())))

    if n > 1 :
        dp[0][1] += dp[1][0]
        dp[1][1] += dp[0][0]

# 연속하는 두 정수 사이에는 빈 칸이 하나 있고, 이를 split을 통해 나누어 append 해준다.
# 한번 떼어낸 스티커의 1.같은 행 다음 열 2. 다른 행 같은 열 두개의 스티커는 사용하지 못하게된다.
# 또, 반드시 대각선으로 점수를 더하는 게 최선의 선택이 아닌 경우가 있다. (중간의 100점 스티커 등)
# 따라서 행 별로 각각의 점수를 더하여 최종적으로 가장 높은 점수를 얻는 방법이 스티커 점수의 최댓값이다.

    for i in range(2, n) : 
        dp[0][i] += max(dp[1][i-1], dp[1][i-2]) # (대각선 다음 열의 스티커와 대각선의 스티커의 최대값을 비교하여 더한다.)
        dp[1][i] += max(dp[0][i-1], dp[0][i-2])

    print(max(dp[0][n-1],dp[1][n-1])) # 두 행의 스티커 합계 중 더 큰쪽의 행이 스티커 점수의 최대값이 된다.