# 백준-11055 가장 긴 감소하는 부분 수열 
# 가장 긴 감소하는 부분 수열을 구하는 프로그램이다.
# 수열 A = {10, 30, 10, 20, 20, 10} 인 경우에 가장 긴 감소하는 부분 수열은 A = {10, 30, 10, 20, 20, 10}  이고, 길이는 3이다.

# 앞의 수가 다음 수보다 크다면 문제의 조건을 만족하고, 각 인덱스에 대해 자신보다 작은 값을 세어 조건을 만족하는 개수를 찾으면 가장 긴 감소하는 부분 수열이 된다.

n = int(input())
arr = list(map(int, input().split()))

dp = [1] * n # 인덱스 위치 중, 가장 긴 감소하는 부분 수열 합을 구하는 dp, 가장 큰 증가하는 부분수열과 다르게 1로 초기화를 한다.

for i in range(n): 
    for j in range(i): # 현재 인덱스 (i) 와 이전 인덱스 (j) 값을 비교하고, 
        if arr[i] < arr[j]: # 현재 인덱스 i가 이전 인덱스  j보다 작은 경우
            dp[i] = max(dp[i], dp[j]+1) # 현재 인덱스 위치 dp[i]와 수열의 길이를 +1한 dp[j]+1의 값으로 가장 긴 감소하는 부분 수열 인덱스의 값을 비교

print(max(dp))