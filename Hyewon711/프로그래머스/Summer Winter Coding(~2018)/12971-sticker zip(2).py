# 12971 - 스티커 모으기(2)
# 이전에 백준에서 푼 스티커 떼는 문제랑 비슷한 것 같은데?
# 점화식 찾기가 어렵다...

sticker = [100, 1, 3, 100, 1]
def solution(sticker):
    if len(sticker) == 1: # 스티커의 길이가 1이면 무조건 떼어내는 경우
        return sticker[0]

    d1 = [0] * len(sticker) # 첫 번째 스티커를 뗀 경우를 확인 (최댓값을 계속 초기화할 변수)
    d2 = [0] * len(sticker) # 첫 번째 스티커를 떼지않은 경우 확인

    # 1) 첫 번째 스티커를 뗀 경우
    d1[0] = sticker[0] # 첫 번째 스티커 숫자 d1[0] 에 대입
    d1[1] = d1[0] # 입력된 값을 d1[1]에 대입
    for i in range(2, len(sticker)-1): # 첫 번째 뗐으니 -1까지
        d1[i] = max(d1[i-2] + sticker[i], d1[i-1])
        # 그 후, 스티커 판을 모두 돌 때까지 최댓값을 초기화하면서 반복한다.

    # 2) 첫 번째 스티커를 안뗀 경우
    for i in range(1, len(sticker)): # 첫 번째 안뗐으므로 마지막까지
        d2[i] = max(d2[i-2] + sticker[i], d2[i-1])

    return max(d1[-2], d2[-1])
    # d1은 첫 번째 스티커를 뗐으므로 한칸 너머인 -2를 확인해야 함
    # d2는 첫 번째 스티커를 떼지않았으므로 첫 번째 스티커 직전 -1을 확인해야 함